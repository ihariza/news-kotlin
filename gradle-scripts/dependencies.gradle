ext {

    // Version
    kotlinVersion = '1.4.0'
    kotlinCoreVersion = '1.3.1'
    kotlinLifecycleVersion = '2.2.0'
    kotlinFragmentVersion = '1.2.5'
    navigationVersion = '2.3.0'
    androidXVersion = '1.1.0'
    constraintlayoutVersion = '1.1.3'
    koinVersion = '2.1.6'
    retrofitVersion = '2.9.0'
    okHttpVersion = '4.8.0'
    roomVersion = '2.3.0-alpha02'
    gsonVersion = '2.8.0'

    glideVersion = '4.11.0'

    timberVersion = '4.7.1'

    stethoVersion = '1.5.1'

    junitVersion = '4.12'
    mockkVersion = '1.10.0'
    testVersion = '1.1.1'
    archVersion = '2.1.0'
    coroutinesVersion = '1.3.9'
    extVersion = '1.2.0'
    hamcrestVersion = '1.1'
    espressoVersion = '3.2.0'
    fragmentVersion = '1.2.5'

    // Package
    supportPackage = 'com.android.support'
    koinPackage = 'org.koin'
    retrofitPackage = 'com.squareup.retrofit2'
    okHttpVersionPackage = 'com.squareup.okhttp3'
    roomPackage = 'androidx.room'
    gsonPackage = 'com.google.code.gson'

    glidePackage = 'com.github.bumptech.glide'

    timberPackage = 'com.jakewharton.timber'
    
    stethoPackage = 'com.facebook.stetho'

    junitPackage = 'junit'
    extPackage = 'androidx.test.ext'
    testPackage = 'androidx.test'
    archPackage = 'androidx.arch.core'
    coroutinesPackage = 'org.jetbrains.kotlinx'
    mockkPackage = 'io.mockk'
    hamcrestPackage = 'org.hamcrest'
    espressoPackage = 'androidx.test.espresso'
    fragmentPackage = 'androidx.fragment'


    // Dependency
    AndroidXdependencies = [
            kotlin_stdlib     : buildDependency('org.jetbrains.kotlin', 'kotlin-stdlib', kotlinVersion),
            kotlin_core       : buildDependency('androidx.core', 'core-ktx', kotlinCoreVersion),
            lifecycle_vm      : buildDependency('androidx.lifecycle', 'lifecycle-viewmodel-ktx', kotlinLifecycleVersion),
            lifecycle_ext     : buildDependency('androidx.lifecycle', 'lifecycle-extensions', kotlinLifecycleVersion),
            fragment_ext      : buildDependency('androidx.fragment', 'fragment-ktx', kotlinFragmentVersion),
            nav_fragment      : buildDependency('androidx.navigation', 'navigation-fragment-ktx', navigationVersion),
            nav_ui            : buildDependency('androidx.navigation', 'navigation-ui-ktx', navigationVersion),
            material          : buildDependency('com.google.android.material', 'material', '1.0.0'),
            annotation        : buildDependency('androidx.annotation', 'annotation', androidXVersion),
            appCompat         : buildDependency('androidx.appcompat', 'appcompat', androidXVersion),
            constraintlayout  : buildDependency('androidx.constraintlayout', 'constraintlayout', constraintlayoutVersion)
    ]

    KoinDependencies = [
            viewmodel : buildDependency(koinPackage, 'koin-androidx-viewmodel', koinVersion)]

    RetrofitDependencies = [
            retrofit      : buildDependency(retrofitPackage, 'retrofit', retrofitVersion),
            converterGson : buildDependency(retrofitPackage, 'converter-gson', retrofitVersion),
            adapterRxjava2: buildDependency(retrofitPackage, 'adapter-rxjava2', retrofitVersion)]

    OkhttpDependencies = [
            okhttp             : buildDependency(okHttpVersionPackage, 'okhttp', okHttpVersion),
            loggingInterceptor : buildDependency(okHttpVersionPackage, 'logging-interceptor', okHttpVersion)]

    RoomDependencies = [
            runtime  : buildDependency(roomPackage, 'room-runtime', roomVersion),
            compiler : buildDependency(roomPackage, 'room-compiler', roomVersion),
            extensions  : buildDependency(roomPackage, 'room-ktx', roomVersion)]

    Gson = buildDependency(gsonPackage, 'gson', gsonVersion)

    GlideDependencies =  [
            core                : buildDependency(glidePackage, 'glide', glideVersion),
            compiler            : buildDependency(glidePackage, 'compiler', glideVersion),
            recyclerIntegration : buildDependency(glidePackage, 'recyclerview-integration', glideVersion)]

    Timber = buildDependency(timberPackage, 'timber', timberVersion)

    StethoDependencies = [
            core   : buildDependency(stethoPackage, 'stetho', stethoVersion),
            okhttp : buildDependency(stethoPackage, 'stetho-okhttp3', stethoVersion)]

    TestingDependencies = [
            junit            : buildDependency(junitPackage, 'junit', junitVersion),
            ext              : buildDependency(extPackage, 'junit', testVersion),
            core             : buildDependency(testPackage, 'core-ktx', extVersion),
            arch_core        : buildDependency(archPackage, 'core-testing', archVersion),
            coroutine_test   : buildDependency(coroutinesPackage, 'kotlinx-coroutines-test', coroutinesVersion),
            rules            : buildDependency(testPackage, 'rules', extVersion),
            mockk            : buildDependency(mockkPackage, 'mockk', mockkVersion),
            hamcrest         : buildDependency(hamcrestPackage, 'hamcrest-library', hamcrestVersion),
            espresso_core    : buildDependency(espressoPackage, 'espresso-core', espressoVersion),
            espresso_contrib : buildDependency(espressoPackage, 'espresso-contrib', espressoVersion),
            espresso_idling  : buildDependency(espressoPackage, 'espresso-idling-resource', espressoVersion),
            fragment         : buildDependency(fragmentPackage, 'fragment-testing', fragmentVersion)]
}

static String buildDependency(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}
